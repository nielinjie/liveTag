<project name="watch" default="run-app" xmlns:ivy="antlib:org.apache.ivy.ant">

	<condition property="griffon" value="griffon.bat">
		<os family="windows" />
	</condition>
	<property name="griffon" value="griffon" />
	<property environment="env" />
	<property name="groovyjar" value="${env.GROOVY_HOME}/embeddable/groovy-all-1.6.3.jar" />
	<taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc" classpath="${groovyjar}" />
	<taskdef resource="tasks.properties">
		<classpath>
			<fileset dir="test/lib">
				<include name="**/*.jar" />
			</fileset>
		</classpath>
	</taskdef>
	<target name="resolve" description="--> retreive dependencies with ivy">
		<ivy:retrieve type="jar" />
	</target>
	<target name="clean-cache">
		<ivy:cleancache />
	</target>
	<target name="toResource">
		<copy todir="griffon-app/resources">
			<fileset dir="src/main">
				<include name="**/*.xml" />
				<include name="**/*.properties" />
			</fileset>
		</copy>
	</target>
	<!-- ================================= 
          target: clean              
         ================================= -->
	<target name="clean" description="--> Cleans a Griffon application">
		<exec executable="${griffon}" failonerror="true">
			<arg value="clean" />
		</exec>
	</target>

	<!-- =================================
          target: package
         ================================= -->
	<target name="package" description="--> Packages up Griffon artifacts">
		<exec executable="${griffon}" failonerror="true">
			<arg value="package" />
		</exec>
	</target>

	<!-- =================================
          target: test
         ================================= -->
	<target name="test" description="--> Run a Griffon applications unit tests">
		<exec executable="${griffon}" failonerror="true">
			<arg value="test-app" />
		</exec>
	</target>

	<!-- =================================
          target: dist
         ================================= -->
	<target name="dist" description="--> Packages up Griffon artifacts in the Production Environment">
		<exec executable="${griffon}" failonerror="true">
			<arg value="prod" />
			<arg value="package" />
		</exec>
	</target>
	<target name="run-app" depends="resolve,toResource">
		<exec executable="${griffon}" failonerror="true">
			<arg value="run-app" />
		</exec>
	</target>

	<target name="main.compile">
		<mkdir dir="classes" />
		<javac srcdir="src/main" destdir="classes" includes="**/*.java" debug="true">
			<classpath location="lib">
				<fileset dir="lib">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
			<classpath location="classes" />
		</javac>
		<groovyc srcdir="src/main" destdir="classes" includes="**/*.groovy">
			<classpath location="lib">
				<fileset dir="lib">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
			<classpath location="classes" />
			<javac debug="on" />
		</groovyc>
		<groovyc srcdir="test/unit" destdir="classes" includes="**/*.groovy">
			<classpath location="lib">
				<fileset dir="lib">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
			<classpath location="classes" />
			<javac debug="on" />
		</groovyc>
		<groovyc srcdir="test/integration" destdir="classes" includes="**/*.groovy">
			<classpath location="lib">
				<fileset dir="lib">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
			<classpath location="classes" />
			<javac debug="on" />

		</groovyc>

		<copy todir="classes">
			<fileset dir="src/main">
				<include name="**/*.xml" />
				<include name="**/*.properties" />
			</fileset>
		</copy>
	</target>
	<target name="main.run" depends="main.compile">
		<java classname="${mainClass}">
			<classpath location="classes" />
			<classpath>
				<fileset dir="lib">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
			<classpath location="${groovyjar}" />
		</java>
	</target>

	<target name="main.test" depends="main.compile">
		<junit printsummary="yes" haltonfailure="yes">
			<classpath location="classes" />
			<classpath>
				<fileset dir="lib">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
			<classpath location="${groovyjar}" />
			<formatter type="plain" usefile="false" />
			<batchtest>
				<fileset dir="classes">
					<include name="**/${testClass}Tests.class" />
				</fileset>
			</batchtest>
		</junit>
	</target>
	<target name="main.testAll" depends="main.compile">
		<junit printsummary="yes" haltonfailure="yes">
			<classpath location="classes" />
			<classpath>
				<fileset dir="lib">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
			<classpath location="${groovyjar}" />
			<formatter type="plain" usefile="false" />
			<batchtest>
				<fileset dir="classes">
					<include name="**/*Tests.class" />
				</fileset>
			</batchtest>
		</junit>
	</target>
	<target name="main.test.coverage" depends="main.compile">
		<cobertura-instrument todir="test/instrumented-classes">
			<fileset dir="classes">
				<include name="**/*.class" />
			</fileset>
		</cobertura-instrument>
		<junit printsummary="yes" haltonfailure="yes">
			<classpath location="test/instrumented-classes" />
			<classpath>
				<fileset dir="test/lib">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
			<classpath location="classes" />
			<classpath>
				<fileset dir="lib">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
			<classpath location="${groovyjar}" />
			<formatter type="plain" usefile="false" />
			<!--test name="LiveTaggedStory" />
			<test name="AdaptorTests" />
			<test name="BaseTests" /-->
			<batchtest>
				<fileset dir="classes">
					<include name="**/*Tests.class" />
					<!--include name="*" /-->
				</fileset>
			</batchtest>
		</junit>
		<cobertura-report srcdir="src/main" destdir="test/report" />
	</target>
	<target name="main.jar" depends="main.compile">
		<jar destfile="tag.jar" basedir="classes"/>
	</target>
	<target name="main.export" depends="main.jar">
		<move todir="../tagFace/lib" file="tag.jar" />
	</target>



</project>
